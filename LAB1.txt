pro-1:
a:Linear Search
import java.util.Scanner;
public class LinearS 
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int item,n,i;
		System.out.println("Enter no of elements: ");
		n = sc.nextInt();
		int[] arr = new int[n];
		System.out.println("Enter "+n+" numbers: ");
		for(i=0;i<n;i++)
		{
			arr[i] = sc.nextInt();
		}
		System.out.println("Enter the item: ");
		item = sc.nextInt();
		for(i=0;i<n;i++)
		{
			if(arr[i] == item)
			{	
				System.out.println("Item found at "+(i+1)+" position");
				break;
			}
		}
		if(i==n)
			System.out.println("Item not found");
	}
}

b:sort
import java.util.*;
public class sort
{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		int n;
		System.out.println("Enter number of names: ");
		n = sc.nextInt();
		String[] arr = new String[n];
		System.out.println("Enter "+n+" names: ");
		for(int i=0;i<n;i++)
			arr[i] = sc.next();
		for(int j=0;j<arr.length;j++)
		{
			for(int i =j+1;i<arr.length;i++)
			{
				if(arr[i].compareToIgnoreCase(arr[j])<0)
				{
					String temp = arr[j];
					arr[j] = arr[i];
					arr[i] = temp;
				}
			}
			System.out.println(arr[j]);
		}
	}
}

pro-2:
a: Multilevel
class car
{
	car()
	{
		System.out.println("Class car");
	}
	public void vehicletype()
	{
		System.out.println("Vehicle Type : car");
	}
}
class Maruti extends car
{
	Maruti()
	{
		System.out.println("class Maruti");
	}
	public void brand()
	{
		System.out.println("Brand: Maruti");
	}
	public void speed()
	{
		System.out.println("Max: 90kmph");
	}
}
public class Maruti800 extends Maruti {
	
	public Maruti800()
	{
		System.out.println("Maruti model: 800");
	}
	public void speed()
	{
		System.out.println("Max Speed: 80kmph");
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Maruti800 obj = new Maruti800();
		obj.vehicletype();
		obj.brand();
		obj.speed();
	}
}

b: Multiple 
class student
{
	int regno;
	void getno(int n)
	{
		regno = n;
	}
	void putno()
	{
		System.out.println("Regno: "+regno);
	}
}
class test extends student
{
	float m1,m2;
	void getmarks(float a,float b)
	{
		m1 = a;
		m2 = b;
	}
	void putmarks()
	{
		System.out.println("M1: "+m1);
		System.out.println("M2: "+m2);
	}
}
interface sports
{
	float sportwt = 6.0f;
	void putwt();
}
class result extends test implements sports
{
	float tot;
	public void putwt()
	{
		System.out.println("Sport wt: "+sportwt);
	}
	void display()
	{
		tot = m1+m2+sportwt;
		putno();
		putmarks();
		putwt();
		System.out.println("Total: "+tot);
	}
}
public class clsmultiple {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		result r = new result();
		r.getno(1001);
		r.getmarks(79f, 95f);
		r.display();
	}

}

pro-3:
a: package

package P1;

public class Student {
	int regno;
	String name;
	public void getdata(int r,String s)
	{
		regno = r;
		name = s;
	}
	public void putdata()
	{
		System.out.println("Regno= "+regno+"\nName= "+name);
	}
}

import P1.*;
public class abc1
{
	public static void main(String[] args)
	{
		Student s= new Student();
		s.getdata(10,"Solomon");
		s.putdata();
	}
}

b: StringTokenizer class

import java.util.*;
public class StringTokenizerDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		int n,sum=0;
		System.out.println("Enter integers with one space");
		String s = sc.nextLine();
		StringTokenizer st = new StringTokenizer(s," ");
		while(st.hasMoreTokens())
		{
			String temp = st.nextToken();
			n = Integer.parseInt(temp);
			sum+=n;
		}
		System.out.println("Sum = "+sum);
	}
}

Pro-4: 
a: Arithmetic operations

import java.util.*;
public class Ari 
{
	static int num1,num2;
	public static int add(int a,int b)
	{
		return a+b;
	}
	public static int sub(int a,int b)
	{
		return a-b;
	}
	public static int mul(int a,int b)
	{
		return a*b;
	}
	public static int div(int a,int b)
	{
		return a/b;
	}
	public static int mod(int a,int b)
	{
		return a%b;
	}
	public static int incre(int a)
	{
		return a++;
	}
	public static int decre(int a)
	{
		return --a;
	}
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter 2 numbers");
		num1 = sc.nextInt();
		num2 = sc.nextInt();
		System.out.println("The 2 numbers are "+num1+" & "+num2+"\nAddition: "+add(num1,num2)+"\nSubtraction: "+sub(num1,num2)+"\nDivision: "+div(num1,num2)+"\nMultiplication: "+mul(num1,num2)+"\nIncrement: "+incre(num1)+"\nDecrement: "+decre(num2));
		
		
	}
}

b: n-numbers array
import java.io.*;
public class narray
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Entert the size of the array");
		int n = Integer.parseInt(br.readLine());
		System.out.println("Enter "+n+" numberes");
		int[] arr = new int[n];
		for(int i=0;i<n;i++)
		{
			arr[i] = Integer.parseInt(br.readLine());
		}
		System.out.println("The elements of array are: ");
		for(int i=0;i<n;i++)
		{
			System.out.println(arr[i]);
		}
	}
}

Pro-5: User-Defined Exception

import java.util.*;

class MyException extends Exception
{
	public MyException(String message)
	{
		super(message);
	}
}
public class exx
{
	public static void validate(int age) throws MyException
	{
		if(age<18)
			throw new MyException("Age is less cant vote");
		else
			System.out.println("Can vote");
	}
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the age");
		int age = sc.nextInt();
		try
		{
			validate(age);
		}
		catch(MyException e)
		{
			System.out.println("Exception Caught");
			System.out.println(e);
		}
		sc.close();
	}
}

Pro-6:
a: String Classes and methods
public class StringDemo 
{
	public static void main(String[] args)
	{
		String s1 = new String("ISE DSCE BANGALORE");
		String s2 = new String("ise dsce bangalore");
		System.out.println("String s1 is: "+s1);
		System.out.println("String s2 is: "+s2);
		System.out.println("Length of String s1 is: "+s1.length());
		System.out.println("Index of r at String s2 is: "+s2.indexOf('r'));
		System.out.println("UpperCase of s2 is: "+s2.toUpperCase());
		System.out.println("LowerCase of s1 is: "+s1.toLowerCase());
		System.out.println("s1.equals(s2): "+s1.equals(s2));
		System.out.println("s1.equalsIgnoreCase(s2): "+s1.equalsIgnoreCase(s2));
		int result = s1.compareTo(s2);
		if(result == 0)
		{
			System.out.println("s1 is equal to s2");
		}
		else if(result > 0)
		{
			System.out.println("s1 is smaller than s2");
		}
		System.out.println("char at index 6 of s1 is: "+s1.charAt(6));
		String s3 = s1.substring(4,12);
		System.out.println("The string s3 is: "+s3);
		System.out.println("Replacing g with a at s2: "+s2.replace('g','a'));
		String s4 = "This is a book";
		System.out.println("Trim s4: "+s4.trim());
		System.out.println(s1.startsWith("ISE"));
		System.out.println(s1.endsWith("LORE"));
		System.out.println(s4.isEmpty());
		System.out.println(s4.hashCode());
		System.out.println(s1.contains("DSCE"));
	}
}

b: Strring Buffer
public class StringBuffer1
{
	public static void main(String[] args)
	{
		StringBuffer s = new StringBuffer("ISE DSCE BANGALORE");
		System.out.println("The String is: "+s);
		System.out.println("Length of s is: "+s.length());
		System.out.println("Capacity of s is: "+s.capacity());
		System.out.println("character at index 6 is: "+s.charAt(6));
		s.setCharAt(3, 'x');
		System.out.println("After setting char x at position 3: "+s);
		System.out.println("After appending: "+s.append("in bangalore"));
		System.out.println("After inserting : "+s.insert(19, "gpt"));
		System.out.println("After deleting: "+s.delete(19, 22));
		System.out.println(s.deleteCharAt(6));
		System.out.println(s.replace(0, 4, "Hey"));
		System.out.println(s.reverse());
		System.out.println(s.codePointAt(6));
		System.out.println(s.codePointBefore(1));
		System.out.println(s.codePointCount(0, 2));
	}
}

Pro-7: Multi-Threading

import java.util.*;
class square extends Thread
{
	int x;
	public square(int num)
	{
		x =num;
	}
	public void run()
	{
		int square = x*x;
		System.out.println("Square of "+x+" is: "+square);
	}
}
class cube extends Thread
{
	int c;
	public cube(int num)
	{
		c = num;
	}
	public void run()
	{
		int cube = c*c*c;
		System.out.println("Cube of "+c+" is: "+cube);
	}
}
class numbers extends Thread
{
	Random r = new Random();
	public void run()
	{
		for(int i=0;i<7;i++)
		{
			int num = r.nextInt(100);
			if(num%2==0)
			{
				square sq = new square(num);
				sq.start();
			}
			else
			{
				cube cb = new cube(num);
				cb.start();
			}
			try
			{
				Thread.sleep(1000);
			}
			catch(Exception e)
			{
				System.out.println(e);
			}
		}
	}
}
public class multi 
{
	public static void main(String[] args)
	{
	numbers n = new numbers();
	n.start();
	}
}

Pro-8: Mouse Events
import java.applet.*;
import java.awt.event.*;
import java.awt.*;

public class MouseEvents extends Applet implements MouseListener,MouseMotionListener {
	String msg=" ";
	int x=0,y=0;
	public void init()
	{
		addMouseListener(this);
		addMouseMotionListener(this);
	}
	public void mouseClicked(MouseEvent m)
	{
		int x=10;
		int y=10;
		msg="mouse clicked";
		repaint();
		
	}
	public void mouseEntered(MouseEvent m)
	{
		int x=10;
		int y=10;
		msg="mouse entered";
		repaint();
		
	}
	public void mouseExited(MouseEvent m)
	{
		int x=10;
		int y=10;
		msg="mouse exited";
		repaint();
		
	}
	public void mousePressed(MouseEvent m)
	{
		int x=m.getX();
		int y=m.getY();
		msg="down";
		repaint();
		
	}
	public void mouseReleased(MouseEvent m)
	{
		int x=m.getX();
		int y=m.getY();
		msg="up";
		repaint();
		
	}
	public void mouseDragged(MouseEvent m)
	{
		int x=m.getX();
		int y=m.getY();
		msg="*";
		showStatus("dragged at"+x+"&"+y);
		repaint();
	}
	public void mouseMoved(MouseEvent m)
	{
		showStatus("Moved at"+m.getX()+"&"+m.getY());
		repaint();
	}
	public void paint(Graphics g)
	{
		g.drawString(msg, x, y);
	}

}